import { useEffect, useState } from "react";

function App() {
  // useState hookok a v√°ltoz√≥k t√°rol√°s√°ra √©s a komponens √∫jrarenderel√©s√©re v√°ltoz√°s eset√©n
  // dogs: az √∂sszes kutya list√°j√°t t√°rolja
  // newDog: az √∫j kutya adatait t√°rolja a form kit√∂lt√©se k√∂zben
  // searchId: a keresend≈ë kutya ID-j√°t t√°rolja
  // foundDog: az ID alapj√°n megtal√°lt kuty√°t t√°rolja

  // üîÑ Komponens mountol√°sakor (el≈ësz√∂r megjelen√©skor) lefut√≥ useEffect
  // Fetch request a /api/dogs v√©gpontra az √∂sszes kutya lek√©r√©s√©hez
  // A v√°laszt elmenti a dogs √°llapotba
  // Hibakezel√©s: konzolra √≠rja a hib√°t ha nem siker√ºl a fetch
  useEffect(() => {}, []);

  // ‚ûï √öj kutya hozz√°ad√°sa
  // 1. Megakad√°lyozza az alap√©rtelmezett form k√ºld√©st (oldal √∫jrat√∂lt√©s)
  // 2. POST request a /api/dogs v√©gpontra
  //    - method: POST
  //    - headers: JSON adatot k√ºld√ºnk, ezt jelezz√ºk
  //    - body: newDog objektum stringg√© alak√≠tva (az age sz√°m t√≠pus√∫ lesz)
  // 3. A v√°laszb√≥l kapott √∫j kuty√°t hozz√°adjuk a dogs list√°hoz
  // 4. Vissza√°ll√≠tjuk az ≈±rlapot alap√©rtelmezett √©rt√©kekre
  const handleAddDog = async (e) => {
    e.preventDefault();
  };

  // üîç Kutya keres√©se ID alapj√°n
  // 1. Ha nincs searchId, kil√©p a f√ºggv√©ny (nincs mit keresni)
  // 2. GET request a /api/dogs/${searchId} v√©gpontra
  // 3. Ha a v√°lasz nem ok (pl. 404), hib√°t dob
  // 4. A v√°laszt elmenti a foundDog √°llapotba
  // 5. Hibakezel√©s: foundDog null-ra √°ll√≠t√°sa (nem tal√°ltunk kuty√°t)
  const handleGetDog = async () => {};

  // üóëÔ∏è Kutya t√∂rl√©se ID alapj√°n - √öJ FUNKCI√ì
  // 1. K√ºldj egy DELETE k√©r√©st a /api/dogs/:id v√©gpontra
  // 2. Ha sikeres, friss√≠tsd a kuty√°k list√°j√°t √∫gy, hogy kisz≈±r√∂d a t√∂r√∂lt kuty√°t
  // 3. T√∂r√∂ld a foundDog √©rt√©k√©t is, ha √©pp az a kutya van megjelen√≠tve
  // 4. A kuty√°k list√°j√°ban (JSX-ben) hozz l√©tre egy gombot minden kuty√°hoz,
  //    amelynek az onClick esem√©nye megh√≠vja p√©ld√°ul ezt: onClick={() => handleDeleteDog(dog.id)}
  const handleDeleteDog = async (id) => {};

  // JSX - A komponens megjelen√≠t√©se
  return (
    <div className="p-8 font-sans">
      <h1>Dogs</h1>
      {/* Kutyalista megjelen√≠t√©se */}
      {/* A dogs √°llapotban l√©v≈ë t√∂mb√∂n v√©gigmegy√ºnk map-pel */}
      {/* Minden kuty√°hoz egy li elem j√∂n l√©tre */}
      {/* key fontos a React sz√°m√°ra a hat√©kony renderel√©shez (mindig egyedi legyen) */}
      <ul></ul>

      <h2>Add New Dog</h2>
      {/* √öj kutya hozz√°ad√°s√°ra szolg√°l√≥ ≈±rlap */}
      {/* onSubmit esem√©nykezel≈ë: handleAddDog f√ºggv√©ny h√≠v√≥dik meg */}
      {/* Minden mez≈ëh√∂z tartozik egy input elem */}
      {/* A fontos mez≈ëk (n√©v, fajta, √©letkor) k√∂telez≈ëek (required) */}
      {/* Az inputokon k√©tir√°ny√∫ adatk√∂t√©s van: */}
      {/* - value: a newDog megfelel≈ë mez≈ëje */}
      {/* - onChange: a newDog √°llapot friss√≠t√©se az √∫j √©rt√©kkel */}
      {/* ‚Äì Az available √©s vaccinated mez≈ëk megad√°s√°hoz haszn√°lj checkboxot, mivel ezek logikai (true/false) √©rt√©ket k√©pviselnek. A be√°ll√≠t√°sukhoz haszn√°ld az e.target.checked √©rt√©ket. */}

      <h2>Find Dog By ID</h2>
      {/* Kutya keres√©se ID alapj√°n */}
      {/* Input mez≈ë sz√°m t√≠pus√∫ √©rt√©k fogad√°s√°ra */}
      {/* K√©tir√°ny√∫ adatk√∂t√©s: */}
      {/* - value: a searchId √°llapot */}
      {/* - onChange: a searchId friss√≠t√©se az √∫j √©rt√©kkel */}

      {/* Keres√©s gomb */}
      {/* onClick esem√©nykezel≈ë: megh√≠vja a handleGetDog f√ºggv√©nyt */}

      {/* Ha tal√°ltunk kuty√°t (foundDog nem null), megjelen√≠tj√ºk az adatait */}
    </div>
  );
}

export default App;
